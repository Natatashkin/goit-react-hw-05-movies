{"version":3,"file":"static/js/812.eea4712a.chunk.js","mappings":"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","sources":["pages/HomePage/HomePage.jsx","pages/HomePage/HomePage.styled.jsx","pages/Layout/Layout.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","pages/MovieDetailsPage/MovieDetailsPage.styled.jsx","pages/MoviesPage/MoviePage.styled.jsx","pages/MoviesPage/MoviesPage.jsx","services/movieApi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport * as movieApi from '../../services/movieApi';\nimport { HomeStyles, Title } from './HomePage.styled';\nimport { MoviesGallery, MovieCard, Card, Loader } from 'components';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Toaster } from 'react-hot-toast';\n\nexport const HomePage = () => {\n  const [trends, setTrends] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    setLoading(true);\n    async function fetchData() {\n      try {\n        const data = await movieApi.getMoviesTrending('day');\n\n        setTrends(prevTrends => [...prevTrends, ...data.results]);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <HomeStyles>\n      <Title>Daily Trending</Title>\n      <Toaster />\n      {loading && <Loader />}\n      {trends.length > 0 && (\n        <MoviesGallery>\n          {trends.map(item => (\n            <Card key={item.id}>\n              <Link to={`movies/${item.id}`} state={{ from: location }}>\n                <MovieCard details={item} />\n              </Link>\n            </Card>\n          ))}\n        </MoviesGallery>\n      )}\n    </HomeStyles>\n  );\n};\n","import styled from 'styled-components';\n\nconst HomeStyles = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding-top: ${({ theme: { spacing } }) => spacing(4)};\n  padding-bottom: ${({ theme: { spacing } }) => spacing(4)};\n`;\n\nconst Title = styled.h2`\n  padding-bottom: ${({ theme: { spacing } }) => spacing(2)};\n  text-align: center;\n`;\n\nexport { HomeStyles, Title };\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Container } from '../../components';\n\nconst Layout = () => {\n  return (\n    <main>\n      <Container>\n        <Outlet />\n      </Container>\n    </main>\n  );\n};\n\nexport { Layout };\n","import { useState, useEffect } from 'react';\nimport {\n  Link,\n  Outlet,\n  Route,\n  Routes,\n  useParams,\n  useLocation,\n} from 'react-router-dom';\nimport * as movieApi from '../../services/movieApi';\nimport {\n  MovieOverview,\n  MovieAdditionalInfo,\n  AdditionalInfoLayout,\n  Cast,\n  Reviews,\n  Button,\n  Loader,\n} from 'components';\nimport { FaRegArrowAltCircleLeft } from 'react-icons/fa';\nimport { MovieDetailsStyles } from './MovieDetailsPage.styled';\n\nexport const MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    setLoading(true);\n    async function fetchMovieById() {\n      try {\n        const response = await movieApi.getMovieDetails(movieId);\n        const data = response.data;\n        setMovie(data);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n        setLoading(false);\n      }\n    }\n    fetchMovieById();\n  }, [movieId]);\n\n  return (\n    <MovieDetailsStyles>\n      {loading && <Loader />}\n      {movie && (\n        <>\n          <Link to={location?.state?.from ?? `/`} state={{ from: location }}>\n            <Button\n              type=\"button\"\n              text=\"Go back\"\n              icon={<FaRegArrowAltCircleLeft />}\n            />\n          </Link>\n\n          <MovieOverview info={movie} />\n          <MovieAdditionalInfo location={location?.state?.from} />\n\n          <Routes>\n            <Route path=\"cast\" element={<Cast cast={movie.credits.cast} />} />\n            <Route\n              path=\"reviews\"\n              element={<Reviews reviews={movie.reviews} />}\n            />\n          </Routes>\n\n          <AdditionalInfoLayout>\n            <Outlet />\n          </AdditionalInfoLayout>\n        </>\n      )}\n    </MovieDetailsStyles>\n  );\n};\n","import styled from 'styled-components';\nconst MovieDetailsStyles = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding-top: ${({ theme: { spacing } }) => spacing(4)};\n  padding-bottom: ${({ theme: { spacing } }) => spacing(4)};\n`;\n\nexport { MovieDetailsStyles };\n","import styled from 'styled-components';\n\nconst MoviesPageStyles = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding-top: ${({ theme: { spacing } }) => spacing(4)};\n  padding-bottom: ${({ theme: { spacing } }) => spacing(4)};\n`;\n\nconst Form = styled.form`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Input = styled.input`\n  padding-top: ${({ theme: { spacing } }) => spacing(1)};\n  padding-bottom: ${({ theme: { spacing } }) => spacing(1)};\n  padding-left: ${({ theme: { spacing } }) => spacing(2)};\n  padding-right: ${({ theme: { spacing } }) => spacing(2)};\n  border-radius: ${({ theme: { options } }) => options.borderRadius};\n  box-shadow: ${({ theme: { options } }) => options.shadowInset}; ;\n`;\n\nexport { MoviesPageStyles, Form, Input };\n","import React from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { useRef, useState, useEffect } from 'react';\nimport { MoviesGallery, MovieCard, Card, Button, Loader } from 'components';\nimport { MoviesPageStyles, Form, Input } from './MoviePage.styled';\nimport * as movieApi from '../../services/movieApi';\nimport toast, { Toaster } from 'react-hot-toast';\n\nexport const MoviesPage = () => {\n  const inputRef = useRef(null);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const searchQuery = searchParams.get('query');\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setSearchParams({ query: inputRef.current.value });\n    inputRef.current.value = '';\n  }\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    setLoading(true);\n    try {\n      async function getMoviesByQuery() {\n        const data = await movieApi.getSearchMovie(searchQuery);\n        if (data.total_results === 0) {\n          toast.error(`No movies on query ${searchQuery}!`);\n          setLoading(false);\n          return;\n        }\n        setMovies(prevMovies => [...prevMovies, ...data.results]);\n        setLoading(false);\n      }\n      getMoviesByQuery();\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  }, [searchQuery]);\n  return (\n    <MoviesPageStyles>\n      <Form onSubmit={handleSubmit}>\n        <Input ref={inputRef} type=\"text\" placeholder=\"Enter title of movie\" />\n        <Button type=\"submit\" text=\"Search\" />\n      </Form>\n      {loading && <Loader />}\n      {movies && (\n        <MoviesGallery>\n          {movies.map(item => (\n            <Card key={item.id}>\n              <Link to={`${item.id}`} state={{ from: location }}>\n                <MovieCard details={item} />\n              </Link>\n            </Card>\n          ))}\n        </MoviesGallery>\n      )}\n      <Toaster />\n    </MoviesPageStyles>\n  );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst AUTH_TOKEN = 'c18b6e4daa60e3e4af297dba0629174d';\n\n//type 'day' or 'week'\nexport const getMoviesTrending = async type => {\n  const response = await axios.get(\n    `/trending/movie/${type}?api_key=${AUTH_TOKEN}&language=en-US&include_adult=false`\n  );\n\n  return response.data;\n};\n\nexport const getSearchMovie = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${AUTH_TOKEN}&query=${query}&language=en-US&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${AUTH_TOKEN}&language=en-US&append_to_response=credits,reviews`\n  );\n  return response;\n};\n"],"names":["HomePage","useState","trends","setTrends","loading","setLoading","location","useLocation","useEffect","movieApi","data","prevTrends","results","console","log","fetchData","HomeStyles","Title","length","map","item","to","id","state","from","details","styled","spacing","theme","Layout","MovieDetailsPage","movieId","useParams","movie","setMovie","response","fetchMovieById","MovieDetailsStyles","type","text","icon","info","path","element","cast","credits","reviews","MoviesPageStyles","Form","Input","options","borderRadius","shadowInset","MoviesPage","inputRef","useRef","useSearchParams","searchParams","setSearchParams","searchQuery","get","movies","setMovies","getMoviesByQuery","total_results","toast","prevMovies","error","onSubmit","e","preventDefault","query","current","value","ref","placeholder","axios","AUTH_TOKEN","getMoviesTrending","getSearchMovie","getMovieDetails"],"sourceRoot":""}